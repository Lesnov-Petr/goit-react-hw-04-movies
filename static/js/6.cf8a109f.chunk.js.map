{"version":3,"sources":["Service/Api-service.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/ItemMovieID/itemMovieID.jsx","Components/ActorCard/ActorCard.jsx","Components/Cast/Cast.jsx","Components/Overview/Overview.jsx","Components/Reviews/Reviews.jsx","Components/MovieInfoBox/MovieInfoBox.jsx","views/MovieDetailsPage.jsx"],"names":["ApiService","page","myKeyAPI","baseURL","axios","defaults","fetchTrandingMovies","get","this","then","data","results","fetchSearchMovies","search","fetchInfoMovieID","id","fetchActorsMovieID","resolve","cast","fetchReviewsMovieID","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","ItemMovieID","title","overview","release_date","vote_average","backdrop_path","genres","onGoToBack","baseImgURL","className","type","onClick","src","alt","slice","map","name","ActorCard","actor","profile_path","character","Cast","state","actors","a","props","catch","error","console","log","setState","Component","Overview","review","author_details","content","Reviews","reviews","MovieInfoBox","isLocation","to","pathname","path","render","MoviesDetailsPage","handleGoToBack","location","history","from","movieID","Number","match","params","response"],"mappings":"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","file":"static/js/6.cf8a109f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst ApiService = {\r\n  page: 1,\r\n  myKeyAPI: \"e1648943ec3f00b3b8db827b73df4be9\",\r\n  baseURL: (axios.defaults.baseURL = \"https://api.themoviedb.org/3\"),\r\n\r\n  fetchTrandingMovies() {\r\n    return axios\r\n      .get(\r\n        `${this.baseURL}/trending/movie/day?api_key=${this.myKeyAPI}&page=${this.page}`\r\n      )\r\n      .then(({ data }) => data.results);\r\n  },\r\n\r\n  fetchSearchMovies(search) {\r\n    return axios\r\n      .get(\r\n        `${this.baseURL}/search/movie?query=${search}&api_key=${this.myKeyAPI}&page=${this.page}`\r\n      )\r\n      .then(({ data }) => data.results);\r\n  },\r\n\r\n  fetchInfoMovieID(id) {\r\n    return axios\r\n      .get(\r\n        `${this.baseURL}/movie/${id}?api_key=${this.myKeyAPI}&page=${this.page}`\r\n      )\r\n      .then(({ data }) => data);\r\n  },\r\n\r\n  fetchActorsMovieID(id) {\r\n    return axios\r\n      .get(\r\n        `${this.baseURL}/movie/${id}/credits?api_key=${this.myKeyAPI}&page=${this.page}`\r\n      )\r\n      .then((resolve) => resolve.data.cast);\r\n  },\r\n\r\n  fetchReviewsMovieID(id) {\r\n    return axios\r\n      .get(\r\n        `${this.baseURL}/movie/${id}/reviews?api_key=${this.myKeyAPI}&page=${this.page}`\r\n      )\r\n      .then((resolve) => resolve.data.results);\r\n  },\r\n};\r\n\r\nexport default ApiService;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import \"./style.scss\";\r\n\r\nconst ItemMovieID = ({\r\n  title,\r\n  overview,\r\n  release_date,\r\n  vote_average,\r\n  backdrop_path,\r\n  genres,\r\n  onGoToBack,\r\n}) => {\r\n  const baseImgURL = backdrop_path\r\n    ? `https://image.tmdb.org/t/p/w500${backdrop_path}`\r\n    : \"https://серебро.рф/img/placeholder.png\";\r\n\r\n  return (\r\n    <>\r\n      <button className=\"back\" type=\"button\" onClick={() => onGoToBack()}>\r\n        Go to back\r\n      </button>\r\n      <div className=\"movie\">\r\n        <div className=\"box__img\">\r\n          <img className=\"movie__img\" src={baseImgURL} alt={title} />\r\n        </div>\r\n        <div className=\"movie__description\">\r\n          <h1 className=\"movie__title\">\r\n            {title}({release_date.slice(0, 4)})\r\n          </h1>\r\n          <p className=\"movie__score\">User score{vote_average}</p>\r\n          <h2 className=\"movie__title\">Overview</h2>\r\n          <p className=\"movie__overview\">{overview}</p>\r\n          <h2 className=\"movie__title\">Genres</h2>\r\n          <ul className=\"movie__listGenres\">\r\n            {genres.map(({ name, id }) => (\r\n              <li className=\"movie__genre\" key={id}>\r\n                {name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemMovieID;\r\n","import \"./style.scss\";\r\n\r\nconst ActorCard = ({ actor }) => {\r\n  const { profile_path, character } = actor;\r\n  const baseURL = profile_path\r\n    ? `https://image.tmdb.org/t/p/w500${profile_path}`\r\n    : \"https://серебро.рф/img/placeholder.png\";\r\n  return (\r\n    <li className=\"itemActor\">\r\n      <img className=\"actorIMG\" src={baseURL} alt={actor.name} />\r\n      <p>{actor.name}</p>\r\n      <p>Character: {character}</p>\r\n    </li>\r\n  );\r\n};\r\nexport default ActorCard;\r\n","import { Component } from \"react\";\r\nimport ApiService from \"../../Service/Api-service\";\r\nimport ActorCard from \"../ActorCard\";\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    actors: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const resolve = await ApiService.fetchActorsMovieID(\r\n      this.props.id\r\n    ).catch((error) => console.log(error));\r\n    this.setState({ actors: resolve });\r\n  }\r\n\r\n  render() {\r\n    const { actors } = this.state;\r\n    return (\r\n      <ul>\r\n        {actors.map((actor) => (\r\n          <ActorCard key={actor.id} actor={actor} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","const Overview = ({ review }) => {\r\n  return (\r\n    <div>\r\n      <h3>{review.author_details.name}</h3>\r\n      <p>{review.content}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import { Component } from \"react\";\r\nimport ApiService from \"../../Service/Api-service\";\r\nimport Overview from \"../Overview\";\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const resolve = await ApiService.fetchReviewsMovieID(\r\n      this.props.id\r\n    ).catch((error) => console.log(error));\r\n\r\n    this.setState({ reviews: resolve });\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <ul>\r\n        {reviews.length\r\n          ? reviews.map((review) => (\r\n              <Overview key={review.id} review={review} />\r\n            ))\r\n          : \"We don't have any reviews for this movie\"}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import { Route, NavLink } from \"react-router-dom\";\r\nimport Cast from \"../Cast\";\r\nimport Reviews from \"../Reviews\";\r\n\r\nconst MovieInfoBox = ({ id, isLocation }) => {\r\n  return (\r\n    <>\r\n      <h3>Additional Information</h3>\r\n      <NavLink\r\n        to={{\r\n          pathname: `/movies/${id}/cast`,\r\n          state: isLocation.state,\r\n        }}\r\n      >\r\n        Cast\r\n      </NavLink>\r\n      <NavLink\r\n        to={{\r\n          pathname: `/movies/${id}/reviews`,\r\n          state: isLocation.state,\r\n        }}\r\n      >\r\n        Reviews\r\n      </NavLink>\r\n\r\n      <Route\r\n        path=\"/movies/:movieID/cast\"\r\n        render={(props) => <Cast {...props} id={id} />}\r\n      />\r\n      <Route\r\n        path=\"/movies/:movieID/reviews\"\r\n        render={(props) => <Reviews {...props} id={id} />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieInfoBox;\r\n","import { Component } from \"react\";\r\nimport ApiService from \"../Service/Api-service\";\r\nimport ItemMovieID from \"../Components/ItemMovieID\";\r\nimport MovieInfoBox from \"../Components/MovieInfoBox\";\r\n\r\nclass MoviesDetailsPage extends Component {\r\n  state = {\r\n    id: \"\",\r\n    title: null,\r\n    overview: null,\r\n    release_date: \"\",\r\n    vote_average: null,\r\n    backdrop_path: null,\r\n    genres: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const movieID = Number(this.props.match.params.movieID);\r\n    const response = await ApiService.fetchInfoMovieID(movieID).catch((error) =>\r\n      console.log(error)\r\n    );\r\n    this.setState({ ...response });\r\n  }\r\n\r\n  handleGoToBack = () => {\r\n    const { location, history } = this.props;\r\n\r\n    history.push(location?.state?.from || \"/goit-react-hw-04-movies\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      overview,\r\n      release_date,\r\n      vote_average,\r\n      backdrop_path,\r\n      genres,\r\n    } = this.state;\r\n    const { location } = this.props;\r\n    return (\r\n      <>\r\n        <ItemMovieID\r\n          title={title}\r\n          overview={overview}\r\n          release_date={release_date}\r\n          vote_average={vote_average}\r\n          backdrop_path={backdrop_path}\r\n          genres={genres}\r\n          onGoToBack={this.handleGoToBack}\r\n        />\r\n        <MovieInfoBox id={id} isLocation={location} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesDetailsPage;\r\n"],"sourceRoot":""}